<?php


// Class Book
class Book {
public $title;
protected $author;
private $price;


// Constructor to initialize title, author, and price
public function __construct($title, $author, $price) {
$this->title = $title;
$this->author = $author;
$this->price = $price;
}


// Method to get details of the book
public function getDetails() {
return "Title: {$this->title}, Author: {$this->author}, Price: \${$this->price}";
}


// Method to set or update the price of the book
public function setPrice($price) {
$this->price = $price;
}


// Magic method __call to handle calls to non-existent methods
public function __call($name, $arguments) {
if ($name == 'updateStock') {
echo "Stock updated for '{$this->title}' with arguments: " . implode(', ', $arguments) . "\n";
} else {
echo "The method {$name} does not exist in the Book class.\n";
}
}
}


// Class Library
class Library {
private $books = [];
public $name;


// Constructor to initialize the Library with a name
public function __construct($name) {
$this->name = $name;
}


// Method to add a book to the library
public function addBook(Book $book) {
$this->books[] = $book;
}


// Method to remove a book from the library by title
public function removeBook($title) {
foreach ($this->books as $key => $book) {
if ($book->title === $title) {
unset($this->books[$key]);
echo "Book '{$title}' removed from the library.\n";
return;
}
}
echo "Book '{$title}' not found in the library.\n";
}


// Method to list all books in the library
public function listBooks() {
if (empty($this->books)) {
echo "No books in the library.\n";
} else {
echo "Books in the library:\n";
foreach ($this->books as $book) {
echo $book->getDetails() . "\n";
}
}
}


// Destructor to clear the library and output a message
public function __destruct() {
echo "The library '{$this->name}' is now closed.\n";
}
}


// Implementation
$library = new Library("City Library");


// Create instances of Book
$book1 = new Book("The Great Gatsby", "F. Scott Fitzgerald", 10.99);
$book2 = new Book("1984", "George Orwell", 8.99);


// Add books to the library
$library->addBook($book1);
$library->addBook($book2);


// Update the price of a book
$book1->setPrice(12.99);


// Attempt to call a non-existent method on the Book object
$book1->updateStock(50);


// List all books in the library
$library->listBooks();


// Remove a book from the library
$library->removeBook("1984");


// List all books in the library after removal
echo "Books in the library after removal:\n";
$library->listBooks();


// Destructor will be triggered when the script ends, closing the library
?>
